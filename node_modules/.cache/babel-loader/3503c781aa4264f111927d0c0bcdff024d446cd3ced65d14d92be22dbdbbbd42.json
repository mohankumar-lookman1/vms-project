{"ast":null,"code":"var _jsxFileName = \"/home/lookman/Desktop/Company Projects/MNVR/homepage/src/Component/searchbox/Searchbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Toolbar from '@mui/material/Toolbar';\nimport InputBase from '@mui/material/InputBase';\nimport customSearchIcon from '../../assets/Search.png';\nimport customNotificationsIcon from '../../assets/Group.png';\nimport customNotificationsIconWithMessage from '../../assets/Message.png';\nimport './SearchBox.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = () => {\n  _s();\n  const [notificationIcon, setNotificationIcon] = useState(customNotificationsIcon);\n  const [searchVisible, setSearchVisible] = useState(false);\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\n  const toggleSearch = () => {\n    setSearchVisible(!searchVisible);\n  };\n  const toggleNotificationIconClick = () => {\n    if (notificationIcon === customNotificationsIcon) {\n      setNotificationIcon(customNotificationsIconWithMessage);\n    } else if (notificationIcon === customNotificationsIconWithMessage) {\n      setShowNotificationBox(true);\n    }\n  };\n  const closeNotificationBox = () => {\n    setNotificationIcon(customNotificationsIcon);\n    setShowNotificationBox(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(InputBase, {\n            placeholder: \"Search...\",\n            inputProps: {\n              'aria-label': 'search'\n            },\n            fullWidth: true,\n            className: \"inputBase\" // Apply CSS class\n            ,\n            style: {\n              transform: `scaleX(${searchVisible ? 1 : 0})`,\n              visibility: searchVisible ? 'visible' : 'hidden',\n              width: searchVisible ? '100%' : '0',\n              paddingLeft: searchVisible ? '10px' : '0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '30px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: customSearchIcon,\n            alt: \"Search\",\n            onClick: toggleSearch,\n            className: \"searchIcon\" // Apply CSS class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0 15px',\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: notificationIcon,\n            alt: \"Notifications\",\n            onClick: notificationIcon === customNotificationsIconWithMessage ? closeNotificationBox : toggleNotificationIconClick,\n            className: \"notificationIcon\" // Apply CSS class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBox, \"KvOLW5lRkWafJysDVG1V9s43ipg=\");\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useState","Toolbar","InputBase","customSearchIcon","customNotificationsIcon","customNotificationsIconWithMessage","jsxDEV","_jsxDEV","SearchBox","_s","notificationIcon","setNotificationIcon","searchVisible","setSearchVisible","showNotificationBox","setShowNotificationBox","toggleSearch","toggleNotificationIconClick","closeNotificationBox","children","className","style","marginLeft","placeholder","inputProps","fullWidth","transform","visibility","width","paddingLeft","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","margin","position","_c","$RefreshReg$"],"sources":["/home/lookman/Desktop/Company Projects/MNVR/homepage/src/Component/searchbox/Searchbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Toolbar from '@mui/material/Toolbar';\nimport InputBase from '@mui/material/InputBase';\nimport customSearchIcon from '../../assets/Search.png';\nimport customNotificationsIcon from '../../assets/Group.png';\nimport customNotificationsIconWithMessage from '../../assets/Message.png';\nimport './SearchBox.css'; // Import the CSS file\n\nconst SearchBox = () => {\n  const [notificationIcon, setNotificationIcon] = useState(customNotificationsIcon);\n  const [searchVisible, setSearchVisible] = useState(false);\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\n\n  const toggleSearch = () => {\n    setSearchVisible(!searchVisible);\n  };\n\n  const toggleNotificationIconClick = () => {\n    if (notificationIcon === customNotificationsIcon) {\n      setNotificationIcon(customNotificationsIconWithMessage);\n    } else if (notificationIcon === customNotificationsIconWithMessage) {\n      setShowNotificationBox(true);\n    }\n  };\n\n  const closeNotificationBox = () => {\n    setNotificationIcon(customNotificationsIcon);\n    setShowNotificationBox(false);\n  };\n\n  return (\n    <div>\n      <Toolbar>\n        <div className=\"toolbar\"> {/* Apply CSS class */}\n          <div style={{ marginLeft: 'auto' }}>\n            <InputBase\n              placeholder=\"Search...\"\n              inputProps={{ 'aria-label': 'search' }}\n              fullWidth\n              className=\"inputBase\" // Apply CSS class\n              style={{\n                transform: `scaleX(${searchVisible ? 1 : 0})`,\n                visibility: searchVisible ? 'visible' : 'hidden',\n                width: searchVisible ? '100%' : '0',\n                paddingLeft: searchVisible ? '10px' : '0',\n              }}\n            />\n          </div>\n          <div style={{ marginLeft: '30px' }}>\n            <img\n              src={customSearchIcon}\n              alt=\"Search\"\n              onClick={toggleSearch}\n              className=\"searchIcon\" // Apply CSS class\n            />\n          </div>\n          <div style={{ margin: '0 15px', position: 'relative' }}>\n            <img\n              src={notificationIcon}\n              alt=\"Notifications\"\n              onClick={\n                notificationIcon === customNotificationsIconWithMessage\n                  ? closeNotificationBox\n                  : toggleNotificationIconClick\n              }\n              className=\"notificationIcon\" // Apply CSS class\n            />\n          </div>\n        </div>\n      </Toolbar>\n    </div>\n  );\n};\n\nexport default SearchBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}