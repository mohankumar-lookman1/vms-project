{"ast":null,"code":"var _jsxFileName = \"/home/lookman/Documents/MNVR/homepage/src/searchbox/Searchbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport InputBase from '@mui/material/InputBase';\nimport customSearchIcon from '../assets/Search.png';\nimport customNotificationsIcon from '../assets/Group.png';\nimport customNotificationsIconWithMessage from '../assets/Message.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = () => {\n  _s();\n  const [hasNewMessage, setHasNewMessage] = useState(false);\n  const [notificationIcon, setNotificationIcon] = useState(customNotificationsIcon);\n  const [searchVisible, setSearchVisible] = useState(false);\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\n  const toggleSearch = () => {\n    setSearchVisible(!searchVisible);\n  };\n  const toggleNotificationBox = () => {\n    setShowNotificationBox(!showNotificationBox);\n  };\n  const toggleNotificationIconClick = () => {\n    if (notificationIcon === customNotificationsIcon) {\n      setNotificationIcon(customNotificationsIconWithMessage);\n    } else if (notificationIcon === customNotificationsIconWithMessage) {\n      setShowNotificationBox(true);\n    }\n  };\n  const closeNotificationBox = () => {\n    setNotificationIcon(customNotificationsIcon);\n    setShowNotificationBox(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(InputBase, {\n            placeholder: \"Search...\",\n            inputProps: {\n              'aria-label': 'search'\n            },\n            fullWidth: true,\n            sx: {\n              backgroundColor: 'white',\n              color: 'black',\n              borderRadius: '25px',\n              height: '40px',\n              fontSize: '16px',\n              transform: `scaleX(${searchVisible ? 1 : 0})`,\n              transformOrigin: 'top right',\n              transition: 'transform 0.3s'\n            },\n            style: {\n              transform: `scaleX(${searchVisible ? 1 : 0})`,\n              transformOrigin: 'top right',\n              transition: 'transform 0.3s',\n              visibility: searchVisible ? 'visible' : 'hidden',\n              width: searchVisible ? '100%' : '0',\n              paddingLeft: searchVisible ? '10px' : '0' // Adjust cursor position\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '30px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: customSearchIcon,\n            alt: \"Search\",\n            onClick: toggleSearch,\n            style: {\n              cursor: 'pointer',\n              width: '30px',\n              height: '30px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0 15px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: notificationIcon,\n            alt: \"Notifications\",\n            onClick: notificationIcon === customNotificationsIconWithMessage ? closeNotificationBox : toggleNotificationIconClick,\n            style: {\n              cursor: 'pointer',\n              width: '30px',\n              height: '30px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), showNotificationBox && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '50px',\n              right: '-10px',\n              backgroundColor: 'white',\n              color: 'black',\n              borderRadius: '5px',\n              width: '300px',\n              height: '500px'\n            },\n            children: \"empty...!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBox, \"lVvjmU3l5L9IGOylgq4bUbV8hNs=\");\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useState","AppBar","Toolbar","InputBase","customSearchIcon","customNotificationsIcon","customNotificationsIconWithMessage","jsxDEV","_jsxDEV","SearchBox","_s","hasNewMessage","setHasNewMessage","notificationIcon","setNotificationIcon","searchVisible","setSearchVisible","showNotificationBox","setShowNotificationBox","toggleSearch","toggleNotificationBox","toggleNotificationIconClick","closeNotificationBox","children","style","display","alignItems","width","marginLeft","placeholder","inputProps","fullWidth","sx","backgroundColor","color","borderRadius","height","fontSize","transform","transformOrigin","transition","visibility","paddingLeft","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","cursor","margin","position","top","right","_c","$RefreshReg$"],"sources":["/home/lookman/Documents/MNVR/homepage/src/searchbox/Searchbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport InputBase from '@mui/material/InputBase';\nimport customSearchIcon from '../assets/Search.png';\nimport customNotificationsIcon from '../assets/Group.png';\nimport customNotificationsIconWithMessage from '../assets/Message.png';\n\nconst SearchBox = () => {\n  const [hasNewMessage, setHasNewMessage] = useState(false);\n  const [notificationIcon, setNotificationIcon] = useState(customNotificationsIcon);\n  const [searchVisible, setSearchVisible] = useState(false);\n  const [showNotificationBox, setShowNotificationBox] = useState(false);\n\n  const toggleSearch = () => {\n    setSearchVisible(!searchVisible);\n  };\n\n  const toggleNotificationBox = () => {\n    setShowNotificationBox(!showNotificationBox);\n  };\n\n  const toggleNotificationIconClick = () => {\n    if (notificationIcon === customNotificationsIcon) {\n      setNotificationIcon(customNotificationsIconWithMessage);\n    } else if (notificationIcon === customNotificationsIconWithMessage) {\n      setShowNotificationBox(true);\n    }\n  };\n\n  const closeNotificationBox = () => {\n    setNotificationIcon(customNotificationsIcon);\n    setShowNotificationBox(false);\n  };\n\n  return (\n    <div >\n      <Toolbar>\n        <div style={{ display: 'flex', alignItems: 'center', width: '100%' }}>\n          <div style={{ marginLeft: 'auto' }}>\n            <InputBase\n              placeholder=\"Search...\"\n              inputProps={{ 'aria-label': 'search' }}\n              fullWidth\n              sx={{\n                backgroundColor: 'white',\n                color: 'black',\n                borderRadius: '25px',\n                height: '40px',\n                fontSize: '16px',\n                transform: `scaleX(${searchVisible ? 1 : 0})`,\n                transformOrigin: 'top right',\n                transition: 'transform 0.3s',\n              }}\n              style={{\n                transform: `scaleX(${searchVisible ? 1 : 0})`,\n                transformOrigin: 'top right',\n                transition: 'transform 0.3s',\n                visibility: searchVisible ? 'visible' : 'hidden',\n                width: searchVisible ? '100%' : '0',\n                paddingLeft: searchVisible ? '10px' : '0', // Adjust cursor position\n              }}\n            />\n          </div>\n          <div style={{ marginLeft: '30px' }}>\n            <img\n              src={customSearchIcon}\n              alt=\"Search\"\n              onClick={toggleSearch}\n              style={{\n                cursor: 'pointer',\n                width: '30px',\n                height: '30px',\n              }}\n            />\n          </div>\n          <div style={{ margin: '0 15px', position: 'relative' }}>\n            <img\n              src={notificationIcon}\n              alt=\"Notifications\"\n              onClick={notificationIcon === customNotificationsIconWithMessage ? closeNotificationBox : toggleNotificationIconClick}\n              style={{\n                cursor: 'pointer',\n                width: '30px',\n                height: '30px',\n              }}\n            />\n            {showNotificationBox && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: '50px',\n                  right: '-10px',\n                  backgroundColor: 'white',\n                  color: 'black',\n                  borderRadius: '5px',\n                  width: '300px',\n                  height: '500px',\n                }}\n              >\n                empty...!\n              </div>\n            )}\n          </div>\n        </div>\n      </Toolbar>\n    </div>\n  );\n};\n\nexport default SearchBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}